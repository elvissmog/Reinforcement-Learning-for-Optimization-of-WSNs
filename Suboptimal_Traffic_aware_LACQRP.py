import numpy as np
import networkx as nx
import random
import math
from pqdict import PQDict
import matplotlib.pyplot as plt
import time
import json

sink_node = 100


def build_graph(positions, links):
    G = nx.Graph()
    for i in positions:
        G.add_node(i, pos=positions[i])

    global position_array
    position_array = {}
    for nd in G:
        position_array[nd] = G.nodes[nd]['pos']

    for u, v in links:
        distance = math.sqrt(math.pow((position_array[u][0] - position_array[v][0]), 2) + math.pow(
            (position_array[u][1] - position_array[v][1]), 2))
        nor_distance = math.ceil(distance / transmission_range)
        G.add_edge(u, v, weight=nor_distance)


    #all_msts = z.spanning_trees()

    def prim(G, start):
        """Function recives a graph and a starting node, and returns a MST"""
        stopN = G.number_of_nodes() - 1
        current = start
        closedSet = set()
        pq = PQDict()
        mst = []

        while len(mst) < stopN:
            for node in G.neighbors(current):
                if node not in closedSet and current not in closedSet:
                    if (current, node) not in pq and (node, current) not in pq:
                        w = G.edges[(current, node)]['weight']
                        pq.additem((current, node), w)

            closedSet.add(current)

            tup, wght = pq.popitem()
            while (tup[1] in closedSet):
                tup, wght = pq.popitem()
            mst.append(tup)
            current = tup[1]

        h = nx.Graph()



        for j in positions:
            h.add_node(j, pos=positions[j])

        #pos_array = []
        #for node in sorted(h):
            #pos_array.append(h.nodes[node]['pos'])
        # print(T_edges)
        for (x, y) in mst:
            dist = math.sqrt(math.pow((position_array[x][0] - position_array[y][0]), 2) + math.pow(
                (position_array[x][1] - position_array[y][1]), 2))

            h.add_edge(x, y, weight=dist)

        return h

    all_msts = []

    for n in G.nodes:
        y = prim(G, n)
        all_msts.append(y)



    MST_paths = []
    for T in all_msts:

        MST_path = {}
        for n in T.nodes:
            for path in nx.all_simple_paths(T, source=n, target=sink_node):
                MST_path[n] = path

        MST_paths.append(MST_path)

    # Q_matrix of all Msts
    Q_matrix = np.zeros((len(all_msts), len(all_msts)))
    # Energy consumption

    initial_e_vals = {}
    for idx in G.nodes:
        if idx != sink_node:
            initial_e_vals[idx] = initial_energy
        else:
            initial_e_vals[idx] = sink_energy

    ref_e_vals = {}
    for idx in G.nodes:
        if idx != sink_node:
            ref_e_vals[idx] = initial_energy
        else:
            ref_e_vals[idx] = sink_energy

    Traffic = {0: 5, 1: 3, 2: 5, 3: 5, 4: 5, 5: 2, 6: 5, 7: 2, 8: 3, 9: 2, 10: 3, 11: 5, 12: 5, 13: 3, 14: 4, 15: 1,
               16: 3, 17: 2, 18: 2, 19: 3, 20: 5, 21: 5, 22: 2, 23: 2, 24: 1, 25: 4, 26: 2, 27: 2, 28: 2, 29: 5, 30: 4,
               31: 4, 32: 1, 33: 1, 34: 5, 35: 3, 36: 1, 37: 4, 38: 4, 39: 3, 40: 2, 41: 4, 42: 2, 43: 1, 44: 1, 45: 1,
               46: 2, 47: 2, 48: 1, 49: 3, 50: 5, 51: 2, 52: 1, 53: 3, 54: 1, 55: 5, 56: 3, 57: 4, 58: 3, 59: 5, 60: 5,
               61: 3, 62: 3, 63: 1, 64: 1, 65: 4, 66: 4, 67: 5, 68: 3, 69: 2, 70: 4, 71: 5, 72: 1, 73: 5, 74: 1, 75: 5,
               76: 4, 77: 5, 78: 4, 79: 4, 80: 2, 81: 5, 82: 1, 83: 5, 84: 4, 85: 1, 86: 1, 87: 4, 88: 1, 89: 1, 90: 2,
               91: 5, 92: 4, 93: 3, 94: 4, 95: 3, 96: 3, 97: 5, 98: 4, 99: 3}

    return G, all_msts, MST_paths, initial_e_vals, ref_e_vals, Traffic, Q_matrix


# list_unweighted_edges = [(32, 66), (55, 57), (54, 84), (69, 66), (100, 88), (25, 7), (55, 62), (14, 27), (15, 57), (93, 49), (59, 2), (15, 86), (63, 19), (74, 44), (98, 53), (42, 64), (23, 69), (73, 64), (34, 98), (30, 67), (91, 33), (78, 58), (60, 1), (1, 57), (13, 92), (17, 78), (47, 32), (63, 25), (51, 100), (30, 42), (11, 93), (52, 69), (42, 67), (42, 14), (95, 9), (62, 99), (20, 48), (40, 24), (30, 82), (16, 1), (27, 46), (20, 24), (59, 16), (23, 55), (15, 50), (64, 79), (91, 34), (89, 39), (11, 89), (82, 19), (17, 19), (18, 86), (87, 63), (49, 79), (55, 75), (40, 21), (90, 6), (50, 96), (61, 58), (93, 4), (36, 26), (6, 38), (74, 79), (3, 25), (78, 87), (19, 6), (3, 43), (98, 93), (7, 70), (56, 67), (8, 64), (65, 61), (14, 4), (96, 41), (55, 74), (33, 54), (78, 33), (5, 67), (94, 28), (40, 13), (98, 56), (76, 59), (73, 69), (79, 90), (30, 16), (47, 88), (96, 37), (76, 37), (99, 42), (85, 17), (25, 98), (4, 17), (31, 76), (87, 84), (30, 29), (46, 66), (67, 12), (99, 95), (13, 88), (9, 92), (61, 40), (0, 40), (85, 36), (70, 36), (50, 14), (28, 42), (65, 94), (28, 59), (20, 57), (24, 57), (8, 23), (97, 37), (17, 8), (73, 0), (53, 67), (2, 86), (60, 2), (54, 40), (22, 18), (64, 44), (75, 55), (66, 38), (18, 76), (66, 62), (67, 24), (54, 97), (40, 47), (40, 1), (81, 0), (8, 34), (25, 43), (75, 69), (18, 59), (41, 20), (92, 9), (81, 77), (29, 72), (31, 66), (29, 8), (21, 16), (51, 53), (64, 73), (18, 14), (82, 8), (81, 44), (10, 90), (8, 47), (38, 30), (93, 0), (97, 73), (14, 10), (85, 49), (13, 18), (77, 51), (50, 68), (44, 31), (10, 18), (78, 85), (53, 42), (71, 69), (42, 49), (42, 53), (56, 8), (90, 25), (34, 16), (29, 37), (40, 79), (0, 50), (89, 100), (47, 7), (83, 5), (63, 23), (60, 47), (80, 12), (62, 79), (26, 19), (61, 85), (27, 52), (44, 56), (80, 31), (57, 75), (36, 30), (72, 20), (63, 61), (92, 84), (88, 56), (33, 58), (25, 56), (17, 21), (5, 23), (60, 31), (94, 4), (65, 21), (76, 8), (53, 12), (67, 83), (80, 43), (83, 48), (83, 59), (77, 29), (30, 52), (9, 81), (91, 31), (37, 11), (37, 22), (72, 21), (20, 33), (59, 11), (100, 93), (41, 12), (30, 19), (42, 15), (73, 30), (50, 61), (20, 45), (69, 51), (70, 17), (0, 55), (72, 93), (82, 96), (82, 73), (44, 4), (54, 48), (27, 73), (76, 50), (52, 38), (77, 19), (99, 49), (94, 32), (32, 42), (33, 48), (12, 77), (84, 99), (27, 32), (28, 23), (13, 93), (17, 79), (39, 3), (59, 73), (79, 5), (60, 71), (58, 76), (58, 48), (81, 78), (92, 90), (88, 49), (70, 61), (58, 7), (69, 41), (91, 84), (18, 71), (95, 12), (42, 32), (78, 16), (52, 39), (96, 55), (75, 90), (93, 94), (83, 87), (86, 33), (34, 28), (14, 4), (88, 29), (85, 58), (17, 73), (87, 21), (60, 41), (29, 10), (63, 72), (85, 100), (70, 37), (60, 30), (85, 29), (90, 22), (98, 26), (41, 89), (94, 31), (45, 62), (39, 38), (36, 94), (6, 19), (21, 16), (63, 91), (22, 78), (37, 3), (80, 11), (33, 29), (84, 62), (28, 53), (65, 74), (50, 33), (52, 95), (19, 13), (55, 46), (100, 12), (90, 79), (99, 31), (91, 42), (89, 86), (42, 59), (61, 8), (78, 97), (12, 5), (78, 84), (40, 67), (96, 41), (21, 10), (3, 99), (39, 47), (83, 73), (70, 12), (31, 29), (20, 23), (33, 59), (12, 100), (22, 6), (97, 60), (19, 74), (51, 27), (30, 84), (7, 61), (21, 90), (22, 82), (64, 48), (17, 55), (77, 34), (12, 41), (77, 43), (4, 45), (36, 48), (11, 51), (18, 20), (11, 72), (62, 92), (51, 89), (75, 90), (95, 87), (73, 60), (50, 55), (67, 3), (56, 11), (79, 53), (68, 21), (1, 39), (46, 91), (22, 5), (95, 81), (28, 13), (8, 65), (11, 2), (17, 45), (2, 67), (40, 69), (58, 100), (51, 14), (10, 73), (18, 47), (69, 54), (15, 43), (4, 88), (60, 73), (14, 70), (63, 87), (17, 84), (84, 41), (72, 21), (39, 96), (87, 15), (4, 25), (11, 69), (76, 71), (7, 49), (60, 88), (17, 94), (17, 39), (61, 69), (42, 35), (84, 46), (45, 8), (87, 60), (22, 31), (28, 83), (88, 23), (75, 34), (49, 72), (97, 71), (80, 45), (6, 60), (52, 38), (7, 30), (10, 30), (76, 78), (62, 64), (3, 29), (27, 62), (79, 75), (57, 66), (31, 85), (93, 89), (43, 89), (41, 74), (13, 28), (47, 89), (87, 6), (74, 85), (81, 96), (80, 10), (37, 86), (22, 43), (0, 54), (56, 35), (95, 18), (43, 5), (63, 17), (75, 80), (0, 77), (37, 86), (32, 77), (1, 66), (90, 79), (64, 45), (67, 70), (27, 65), (93, 18), (19, 89), (85, 9), (39, 43), (95, 15), (62, 14), (26, 29), (75, 23), (98, 5), (31, 48), (61, 83), (64, 93), (99, 12), (3, 61), (86, 31), (7, 95), (76, 3), (45, 33), (73, 29), (38, 79), (95, 1), (12, 80), (87, 46), (82, 57), (44, 67), (2, 68), (75, 65), (76, 19), (15, 92), (93, 35), (17, 49), (68, 82), (54, 30), (89, 94), (87, 18), (61, 100), (32, 97), (34, 62), (89, 83), (89, 58), (31, 4), (55, 4), (23, 41), (85, 22), (78, 38), (19, 17), (61, 99), (31, 84), (56, 75), (84, 53), (51, 97), (7, 37), (1, 15), (6, 55), (7, 95), (18, 23), (36, 100), (35, 12), (29, 49), (65, 16), (41, 7), (92, 12), (56, 71), (82, 37), (12, 92), (49, 68), (21, 35), (52, 1), (60, 18), (74, 17), (41, 50), (90, 87), (86, 28), (33, 38), (29, 37), (83, 47), (45, 16), (14, 27), (60, 57), (21, 29), (87, 35), (49, 85), (21, 95), (7, 48), (70, 97), (10, 74), (74, 24), (58, 76), (90, 96), (92, 26), (49, 90), (36, 9), (82, 19), (79, 74), (13, 11), (5, 20), (84, 91), (36, 40), (41, 75), (53, 1), (40, 34), (48, 6), (42, 4), (35, 23), (64, 42), (96, 86), (2, 62), (82, 41), (52, 82), (7, 58), (2, 37), (25, 11), (33, 13), (20, 79), (35, 89), (6, 15), (46, 33), (5, 36), (28, 90), (7, 72), (0, 30), (36, 22), (56, 25), (59, 56), (20, 57), (18, 21), (84, 54), (96, 66), (65, 80), (7, 82), (55, 27), (3, 59), (54, 29), (77, 80), (56, 21), (81, 36), (65, 6), (27, 67), (85, 92), (51, 48), (88, 8), (41, 61), (14, 64), (99, 15), (99, 68), (63, 70), (5, 61), (54, 34), (75, 4), (87, 62), (84, 82), (50, 14), (31, 9), (89, 10), (72, 9), (31, 25), (17, 4), (74, 49), (27, 20), (65, 44), (96, 3), (11, 7), (7, 1), (37, 18), (23, 43), (23, 9), (84, 49), (56, 72), (78, 98), (35, 26), (28, 1), (20, 33), (57, 16), (44, 30), (56, 40), (56, 38), (37, 51), (90, 88), (63, 89), (15, 18), (47, 23), (74, 51), (81, 14), (66, 77), (17, 4), (52, 56), (0, 3), (30, 25), (79, 43), (76, 98), (49, 92), (32, 37), (1, 66), (94, 26), (58, 28), (9, 56), (41, 0), (82, 79), (64, 37), (10, 3), (50, 13), (62, 56), (82, 5), (41, 16), (87, 48), (64, 42), (65, 58), (65, 83), (25, 69), (42, 25), (45, 86), (85, 42), (91, 98), (10, 24), (74, 14), (40, 95), (22, 81), (47, 61), (26, 47), (80, 22), (97, 77), (78, 45), (33, 3), (92, 59), (15, 57), (29, 42), (33, 84), (24, 94), (95, 39), (17, 23), (88, 96), (25, 52), (31, 3), (20, 49), (23, 89), (100, 67), (95, 59), (8, 49), (67, 89), (63, 72), (43, 95), (30, 24), (30, 11), (36, 53), (24, 29), (51, 67), (48, 59), (31, 48), (34, 68), (90, 46), (18, 35), (13, 92), (34, 76), (54, 19), (65, 29), (70, 95), (86, 32), (32, 16), (100, 9), (79, 38), (28, 76), (44, 41), (55, 76), (57, 38), (85, 63), (11, 87), (32, 54), (45, 47), (29, 21), (69, 24), (35, 15), (99, 52), (65, 86), (14, 38), (25, 4), (70, 31), (79, 65), (30, 35), (97, 47), (18, 81), (5, 27), (65, 79), (25, 63), (67, 1), (84, 3), (30, 49), (73, 63), (26, 48), (77, 7), (94, 65), (58, 91), (53, 30), (77, 80), (69, 96), (29, 100), (37, 39), (57, 22), (89, 32), (52, 74), (66, 82), (24, 46), (74, 81), (69, 0), (75, 52), (64, 31), (10, 12), (69, 58), (53, 43), (34, 92), (47, 20), (65, 42), (16, 17), (100, 96), (72, 59), (67, 44), (11, 22), (48, 62), (43, 36), (100, 95), (82, 42), (85, 72), (55, 52), (34, 8), (93, 20), (2, 51), (67, 65), (8, 15), (77, 45), (81, 55), (40, 75), (68, 63), (56, 11), (99, 22), (69, 100), (72, 92), (40, 35), (16, 92), (74, 42), (93, 26), (87, 94), (8, 44), (32, 13), (31, 29), (33, 70), (74, 38), (32, 78), (96, 22), (10, 18), (7, 67), (4, 35), (88, 76), (81, 59), (66, 29), (90, 39), (73, 72), (100, 45), (56, 5), (37, 60), (37, 20), (29, 83), (9, 36), (14, 88), (66, 37), (47, 38), (98, 2), (79, 84), (49, 31), (68, 48), (76, 87), (63, 87), (86, 92), (64, 20), (36, 0), (37, 68), (91, 87), (80, 22), (70, 61), (82, 80), (96, 37), (12, 30), (78, 22), (100, 52), (58, 46), (15, 47), (88, 51), (7, 5), (82, 21), (93, 99), (45, 59), (36, 93), (84, 29), (39, 63), (70, 87), (36, 41), (91, 95), (90, 33), (19, 84), (27, 23), (78, 71), (75, 85), (37, 19), (7, 62), (57, 35), (54, 37), (72, 0), (70, 94), (65, 7), (85, 95), (46, 67), (24, 66), (55, 62), (32, 34), (73, 75), (32, 57), (35, 9), (50, 27), (100, 67), (37, 22), (26, 31), (94, 72), (97, 57), (95, 42), (11, 92), (36, 1), (77, 43), (32, 14), (19, 23), (12, 79), (60, 89), (17, 92), (6, 70), (75, 29), (87, 32), (81, 42), (63, 44), (91, 73), (12, 73), (59, 10), (61, 43), (37, 58), (28, 55), (35, 41), (7, 84), (33, 25), (62, 1), (18, 88), (47, 17), (21, 34), (99, 33), (40, 79), (44, 81), (2, 75), (94, 13), (57, 46), (6, 22), (3, 68), (67, 99), (5, 26), (63, 50), (26, 93), (15, 36), (35, 96), (37, 3), (85, 64), (24, 86), (75, 12), (65, 15), (12, 95), (73, 33), (30, 49), (88, 66), (86, 1), (65, 84), (90, 93), (43, 30), (63, 46), (99, 52), (33, 47), (17, 3), (9, 10), (6, 17), (10, 81), (29, 38), (100, 5), (64, 20), (58, 88), (62, 28), (34, 32), (11, 24), (85, 45), (11, 65), (33, 55), (65, 35), (58, 60), (76, 38), (38, 6), (51, 29), (39, 83), (40, 38), (54, 33), (78, 3), (93, 61), (4, 37), (64, 21), (57, 2), (45, 49), (72, 95), (43, 58), (10, 98), (85, 7), (24, 34), (33, 47), (42, 5), (0, 80), (96, 69), (8, 55), (10, 55), (5, 65), (50, 94), (51, 44), (82, 80), (18, 34), (48, 50), (93, 66), (77, 36), (60, 52), (48, 91), (66, 50), (22, 45), (68, 25), (82, 75), (31, 63), (5, 8), (25, 59), (10, 43), (48, 33), (54, 30), (43, 84), (20, 48), (63, 85), (52, 92), (72, 12), (48, 97), (86, 99), (76, 46), (56, 49), (0, 17), (51, 78), (72, 22), (18, 64), (73, 3), (47, 29), (80, 65), (94, 51), (1, 30), (50, 3), (19, 0), (48, 98), (13, 53), (55, 97), (24, 80), (70, 54), (50, 2), (100, 26), (31, 73), (2, 99), (68, 64), (68, 1)]
# x_y = [(534, 671), (624, 788), (505, 503), (417, 746), (260, 997), (37, 514), (320, 578), (596, 941), (425, 901), (290, 14), (450, 67), (606, 137), (181, 528), (193, 206), (401, 825), (387, 479), (236, 758), (945, 652), (968, 537), (991, 748), (662, 723), (596, 662), (303, 760), (373, 579), (129, 331), (554, 892), (767, 626), (981, 330), (105, 965), (272, 546), (965, 298), (540, 970), (632, 639), (293, 519), (419, 716), (439, 322), (38, 983), (598, 461), (429, 322), (158, 327), (965, 62), (954, 320), (246, 865), (384, 664), (594, 657), (551, 544), (233, 224), (787, 293), (583, 106), (958, 367), (90, 748), (297, 278), (230, 889), (669, 124), (556, 625), (264, 199), (400, 342), (173, 706), (687, 938), (464, 826), (710, 618), (898, 867), (595, 27), (568, 839), (43, 151), (349, 284), (319, 733), (731, 543), (731, 632), (1000, 242), (898, 391), (494, 425), (469, 69), (754, 77), (927, 557), (973, 388), (922, 37), (133, 526), (725, 353), (305, 918), (950, 230), (172, 104), (594, 343), (989, 795), (855, 949), (460, 546), (601, 547), (592, 140), (658, 605), (122, 841), (39, 788), (183, 906), (443, 504), (905, 369), (708, 394), (154, 189), (553, 701), (29, 948), (45, 233), (954, 194), (156, 960)]

# list_unweighted_edges = [(54, 100), (96, 14), (39, 93), (91, 53), (21, 78), (95, 72), (25, 65), (22, 32), (33, 2), (23, 68), (55, 69), (81, 97), (46, 54), (55, 67), (70, 20), (26, 38), (28, 48), (17, 35), (74, 96), (61, 53), (83, 48), (4, 5), (77, 51), (35, 15), (30, 57), (83, 90), (77, 44), (67, 39), (68, 52), (57, 52), (23, 54), (47, 61), (61, 33), (36, 49), (32, 55), (14, 41), (87, 63), (2, 79), (81, 89), (43, 57), (78, 29), (22, 87), (12, 62), (29, 73), (23, 66), (71, 99), (38, 33), (85, 13), (86, 88), (19, 46), (31, 45), (71, 45), (41, 12), (62, 51), (40, 8), (0, 61), (22, 18), (0, 34), (96, 11), (77, 10), (70, 78), (63, 75), (3, 95), (84, 16), (32, 86), (16, 85), (24, 90), (11, 83), (73, 33), (48, 2), (47, 98), (31, 34), (64, 52), (87, 58), (6, 96), (66, 40), (50, 14), (12, 10), (1, 84), (27, 31), (3, 70), (63, 19), (8, 61), (90, 9), (26, 49), (48, 6), (70, 17), (38, 50), (22, 41), (86, 24), (61, 59), (82, 48), (92, 40), (79, 68), (58, 89), (83, 32), (62, 72), (29, 12), (79, 71), (21, 76), (30, 29), (92, 96), (98, 51), (8, 27), (100, 20), (7, 43), (0, 9), (92, 90), (65, 64), (65, 50), (75, 72), (42, 40), (73, 63), (80, 33), (56, 78), (8, 27), (98, 12), (69, 65), (0, 65), (93, 46), (78, 24), (59, 31), (61, 89), (71, 60), (90, 76), (62, 29), (49, 77), (99, 95), (70, 39), (93, 100), (86, 68), (70, 44), (31, 59), (51, 77), (27, 34), (46, 69), (60, 6), (99, 62), (65, 60), (20, 61), (84, 92), (4, 43), (92, 39), (3, 61), (24, 23), (86, 72), (71, 8), (57, 65), (17, 94), (4, 40), (56, 88), (44, 43), (47, 92), (52, 8), (49, 79), (92, 60), (60, 84), (25, 89), (27, 63), (72, 69), (85, 52), (73, 25), (85, 20), (0, 2), (27, 4), (61, 59), (32, 2), (3, 21), (17, 2), (64, 48), (54, 80), (4, 21), (47, 80), (88, 22), (78, 17), (29, 66), (32, 81), (27, 89), (97, 76), (20, 28), (80, 48), (45, 24), (49, 76), (55, 79), (27, 62), (53, 28), (33, 35), (99, 43), (37, 100), (33, 54), (82, 75), (58, 8), (15, 90), (71, 63), (24, 55), (54, 97), (97, 2), (91, 84), (84, 2), (59, 72), (38, 90), (72, 69), (88, 49), (6, 31), (44, 54), (31, 61), (88, 94), (66, 28), (18, 76), (98, 51), (94, 62), (32, 6), (78, 65), (79, 31), (60, 13), (10, 28), (25, 74), (66, 39), (44, 25), (33, 25), (17, 24), (46, 39), (43, 20), (13, 57), (47, 87), (13, 28), (59, 18), (36, 91), (28, 97), (26, 27), (30, 21), (58, 52), (71, 25), (85, 61), (59, 8), (85, 9), (42, 84), (94, 5), (71, 80), (6, 84), (96, 72), (52, 81), (28, 5), (8, 18), (59, 52), (73, 77), (76, 34), (41, 89), (39, 97)]
# x_y = [(727, 333), (410, 921), (369, 283), (943, 142), (423, 646), (153, 477), (649, 828), (911, 989), (972, 422), (35, 419), (648, 836), (17, 688), (281, 402), (344, 909), (815, 675), (371, 908), (748, 991), (838, 45), (462, 505), (508, 474), (565, 617), (2, 979), (392, 991), (398, 265), (789, 35), (449, 952), (88, 281), (563, 839), (128, 725), (639, 35), (545, 329), (259, 294), (379, 907), (830, 466), (620, 290), (789, 579), (778, 453), (667, 663), (665, 199), (844, 732), (105, 884), (396, 411), (351, 452), (488, 584), (677, 94), (743, 659), (752, 203), (108, 318), (941, 691), (981, 702), (100, 701), (783, 822), (250, 788), (96, 902), (540, 471), (449, 473), (671, 295), (870, 246), (588, 102), (703, 121), (402, 637), (185, 645), (808, 10), (668, 617), (467, 852), (280, 39), (563, 377), (675, 334), (429, 177), (494, 637), (430, 831), (57, 726), (509, 729), (376, 311), (429, 833), (395, 417), (628, 792), (512, 259), (845, 729), (456, 110), (277, 501), (211, 996), (297, 689), (160, 87), (590, 605), (498, 557), (971, 211), (562, 326), (315, 963), (316, 471), (390, 316), (365, 755), (573, 631), (881, 532), (969, 218), (220, 388), (517, 500), (869, 670), (490, 575), (331, 992), (500, 500)]

list_unweighted_edges = [(4, 0), (80, 26), (73, 11), (20, 62), (19, 32), (87, 34), (19, 26), (61, 80), (11, 79),
                         (0, 31), (82, 43), (68, 19), (35, 1), (9, 61), (17, 87), (86, 79), (4, 89), (64, 6), (45, 20),
                         (73, 8), (4, 93), (30, 24), (19, 73), (65, 41), (50, 42), (68, 26), (47, 79), (99, 74),
                         (43, 54), (89, 44), (39, 68), (36, 42), (71, 90), (26, 50), (66, 64), (51, 22), (62, 88),
                         (5, 40), (85, 33), (18, 8), (86, 77), (5, 98), (95, 59), (52, 73), (74, 85), (29, 68),
                         (43, 37), (3, 14), (36, 14), (78, 98), (75, 52), (55, 11), (24, 86), (5, 73), (49, 1),
                         (70, 53), (76, 64), (90, 30), (88, 65), (43, 68), (25, 64), (48, 97), (49, 61), (28, 81),
                         (20, 25), (55, 82), (7, 85), (44, 74), (17, 36), (71, 1), (39, 59), (24, 52), (29, 78),
                         (73, 91), (71, 85), (21, 43), (34, 25), (1, 57), (98, 55), (51, 93), (54, 2), (26, 6),
                         (54, 83), (98, 37), (23, 81), (12, 0), (0, 11), (30, 81), (16, 82), (17, 8), (93, 68),
                         (72, 24), (58, 28), (93, 74), (14, 71), (45, 82), (16, 62), (35, 80), (33, 77), (31, 41),
                         (83, 8), (39, 69), (0, 27), (38, 17), (4, 65), (31, 90), (2, 5), (94, 42), (81, 90), (31, 2),
                         (94, 81), (97, 41), (100, 99), (42, 88), (91, 44), (49, 18), (18, 51), (96, 40), (81, 75),
                         (5, 23), (71, 9), (87, 6), (57, 71), (87, 81), (18, 41), (32, 62), (69, 22), (10, 68), (8, 24),
                         (53, 35), (24, 66), (92, 35), (68, 94), (49, 98), (38, 74), (88, 96), (84, 80), (84, 18),
                         (82, 13), (84, 32), (26, 8), (47, 84), (85, 27), (9, 8), (18, 81), (9, 97), (82, 36), (20, 82),
                         (50, 15), (46, 5), (75, 57), (0, 57), (77, 26), (5, 70), (64, 43), (55, 51), (66, 97),
                         (31, 43), (13, 97), (95, 62), (73, 4), (38, 46), (96, 57), (59, 43), (13, 91), (71, 73),
                         (89, 29), (64, 68), (48, 69), (63, 56), (82, 12), (33, 24), (47, 85), (23, 39), (58, 42),
                         (52, 91), (50, 6), (0, 84), (36, 78), (9, 64), (91, 29), (99, 65), (52, 24), (33, 1), (52, 24),
                         (18, 1), (40, 3), (45, 32), (2, 42), (52, 37), (85, 67), (18, 50), (64, 45), (21, 30), (3, 2),
                         (31, 34), (57, 23), (75, 52), (49, 68), (17, 30), (20, 65), (11, 99), (54, 96), (12, 19),
                         (40, 10), (70, 36), (96, 67), (76, 32), (13, 5), (89, 12), (15, 62), (0, 86), (75, 13),
                         (63, 53), (34, 51), (70, 27), (82, 17), (15, 22), (19, 100), (75, 3), (5, 1), (89, 61),
                         (44, 88), (94, 70), (52, 95), (53, 49), (75, 100), (79, 9), (43, 87), (86, 67), (60, 72),
                         (52, 82), (7, 59), (78, 60), (26, 86), (25, 46), (25, 4), (97, 35), (73, 84), (57, 40),
                         (42, 49), (27, 67), (51, 23), (4, 75), (67, 65), (26, 8), (42, 36), (88, 15), (96, 99),
                         (38, 47), (85, 35), (13, 32), (86, 96), (44, 81), (91, 36), (60, 30), (88, 59), (88, 35),
                         (53, 89), (8, 18), (61, 18), (3, 25), (90, 9), (54, 8), (100, 66), (67, 44), (69, 43),
                         (54, 38), (65, 53), (8, 50), (38, 90), (98, 11), (67, 21), (36, 26), (64, 65), (79, 3),
                         (41, 35), (30, 5), (8, 69), (16, 81), (0, 90), (95, 12), (63, 73), (1, 61), (1, 26), (33, 64),
                         (30, 90), (29, 66), (100, 84), (19, 87), (52, 99), (81, 49), (83, 14), (55, 14), (27, 36),
                         (70, 75), (100, 72), (6, 65), (19, 25), (7, 59), (62, 46), (15, 84), (30, 34), (82, 14),
                         (90, 93), (97, 50), (86, 62), (69, 35), (100, 53), (66, 85), (80, 13), (88, 21), (10, 93),
                         (13, 55), (88, 29), (48, 40), (58, 73), (0, 72), (12, 15), (96, 43), (98, 0), (91, 68),
                         (38, 54), (50, 78), (85, 86), (13, 88), (46, 22), (25, 27), (47, 25), (10, 87), (100, 53),
                         (38, 42), (54, 11), (92, 75), (96, 42), (5, 2), (61, 99), (36, 99), (50, 68), (24, 80),
                         (15, 23), (52, 97), (33, 29), (0, 14), (18, 4), (45, 77), (94, 71), (66, 83), (42, 81),
                         (91, 66), (13, 9), (79, 69), (52, 74), (47, 65), (41, 59), (14, 67), (32, 18), (14, 100),
                         (11, 3), (1, 21), (29, 67), (91, 66), (8, 74), (71, 12), (28, 9), (41, 7), (45, 22), (93, 34),
                         (48, 54), (89, 55), (80, 52), (16, 46), (20, 78), (59, 57), (32, 22), (42, 73), (14, 3),
                         (0, 34), (9, 96), (47, 94), (30, 10), (89, 81), (37, 48), (96, 48), (88, 77), (59, 64),
                         (71, 91), (98, 50), (79, 98), (55, 17), (45, 79), (97, 92), (37, 4), (84, 73), (53, 26),
                         (56, 41), (20, 25), (9, 26), (56, 91), (74, 42), (24, 98), (0, 3), (16, 96), (65, 85),
                         (61, 52), (95, 59), (66, 32), (0, 98), (2, 18), (4, 94), (57, 73), (6, 69), (82, 34), (11, 82),
                         (27, 6), (94, 1), (2, 44), (1, 86), (56, 1), (43, 26), (89, 46), (63, 28), (31, 8), (16, 8),
                         (36, 18), (16, 28), (74, 51), (3, 65), (90, 57), (3, 13), (50, 66), (83, 97), (7, 18),
                         (26, 29), (51, 22), (87, 39), (59, 16), (42, 98), (69, 1), (79, 5), (95, 64), (34, 3),
                         (60, 43), (84, 73), (97, 57), (55, 63), (22, 38), (66, 100), (15, 47), (26, 99), (76, 90),
                         (33, 34), (22, 16), (29, 82), (14, 80), (47, 70), (3, 90), (43, 97), (99, 13), (83, 26),
                         (56, 8), (87, 100), (83, 24), (97, 37), (34, 39), (35, 75), (92, 37), (67, 65), (21, 65),
                         (59, 87), (32, 5), (39, 45), (17, 0), (88, 16), (83, 25), (80, 52), (76, 48), (76, 15),
                         (93, 6), (49, 16), (3, 45), (66, 42), (32, 43), (84, 11), (90, 35), (80, 34), (12, 25),
                         (78, 72), (4, 57), (59, 96), (29, 12), (30, 47), (14, 86), (18, 42), (46, 79), (80, 31),
                         (22, 2), (22, 12), (41, 26), (81, 65), (25, 81), (7, 49), (54, 11), (6, 43), (80, 15),
                         (44, 20), (19, 32), (49, 19), (25, 85), (75, 38), (100, 42), (29, 77), (41, 11), (85, 24),
                         (91, 62), (48, 90), (84, 41), (69, 37), (50, 3), (79, 13), (96, 69), (73, 86), (80, 88),
                         (48, 71), (78, 90), (92, 94), (5, 13), (72, 46), (5, 87), (5, 56), (32, 46), (1, 4), (31, 20),
                         (22, 94), (76, 43), (73, 66), (19, 97), (56, 77), (70, 41), (18, 25), (35, 100), (71, 6),
                         (67, 38), (59, 74), (90, 51), (51, 22), (0, 73), (34, 98), (79, 6), (59, 88), (1, 19),
                         (88, 21), (83, 2), (6, 45), (40, 96), (67, 77), (82, 29), (58, 31), (20, 71), (42, 10),
                         (82, 62), (9, 86), (22, 43), (41, 61), (52, 100), (16, 96), (61, 70), (49, 60), (92, 8),
                         (63, 38), (87, 17), (41, 16), (56, 57), (69, 0), (77, 55), (20, 90), (82, 43), (1, 40),
                         (39, 28), (76, 89), (35, 27), (4, 72), (99, 71), (93, 100), (16, 84), (59, 8), (2, 35),
                         (0, 54), (25, 24), (67, 40), (44, 45), (83, 16), (51, 71), (13, 97), (68, 23), (68, 59),
                         (86, 46), (36, 63), (75, 44), (74, 13), (17, 81), (86, 3), (16, 95), (89, 11), (87, 16),
                         (45, 86), (98, 40), (79, 61), (40, 98), (96, 69), (2, 10), (89, 44), (92, 25), (14, 67),
                         (9, 24), (21, 36), (79, 38), (97, 31), (5, 43), (25, 40), (32, 97), (27, 71), (4, 62),
                         (63, 70), (41, 20), (96, 26), (60, 54), (90, 2), (50, 46), (7, 60), (50, 32), (85, 23),
                         (60, 78), (6, 43), (7, 26), (24, 74), (100, 46), (25, 58), (97, 0), (21, 20), (59, 67),
                         (40, 36), (88, 51), (14, 20), (93, 66), (0, 85), (16, 68), (72, 16), (43, 53), (54, 85),
                         (96, 83), (14, 36), (75, 68), (89, 75), (22, 43), (44, 34), (14, 94), (94, 3), (72, 36),
                         (93, 16), (47, 26), (97, 47), (17, 84), (68, 6), (9, 69), (25, 81), (80, 13), (100, 83),
                         (7, 5), (60, 27), (28, 10), (72, 46), (49, 14), (64, 25), (89, 22), (66, 78), (84, 47),
                         (84, 93), (94, 75), (1, 63), (12, 85), (98, 71), (4, 76), (14, 9), (42, 86), (9, 1), (30, 80),
                         (26, 40), (67, 96), (37, 1), (40, 39), (41, 8), (26, 4), (78, 31), (61, 11), (74, 93), (5, 24),
                         (80, 58), (28, 77), (54, 4), (29, 69), (18, 57), (64, 55), (6, 3), (49, 53), (9, 94), (2, 51),
                         (49, 25), (58, 14), (71, 95), (38, 82), (59, 78), (83, 72), (87, 9), (77, 20), (81, 15),
                         (66, 86), (10, 15), (97, 57), (84, 95), (48, 59), (35, 94), (6, 74), (91, 41), (80, 51),
                         (70, 39), (68, 50), (8, 0), (12, 43), (2, 19), (67, 87), (31, 41), (25, 82), (63, 94),
                         (35, 65), (48, 35), (73, 96), (96, 43), (27, 76), (17, 70), (42, 14), (67, 62), (0, 21),
                         (53, 64), (14, 34), (49, 65), (37, 13), (53, 22), (18, 29), (1, 16), (73, 94), (65, 77),
                         (42, 44), (52, 74), (87, 42), (100, 38), (2, 11), (13, 69), (30, 85), (98, 12), (59, 84),
                         (93, 14), (70, 53), (56, 13), (36, 33), (10, 99), (50, 60), (99, 57), (20, 41), (23, 51),
                         (79, 59), (73, 24), (45, 0), (92, 79), (19, 57), (64, 99), (27, 77), (78, 6), (91, 57),
                         (49, 26), (37, 12), (7, 8), (98, 35), (88, 46), (38, 86), (31, 50), (86, 31), (95, 24),
                         (76, 31), (69, 5), (67, 89), (17, 5), (92, 83), (65, 19), (54, 85), (93, 1), (10, 67),
                         (93, 33), (72, 47), (68, 87), (8, 95), (95, 56), (98, 80), (44, 71), (76, 91), (99, 22),
                         (84, 50), (11, 32), (64, 35), (43, 37), (1, 65), (0, 52), (92, 6), (69, 75), (65, 50),
                         (25, 95), (16, 39), (44, 13), (45, 27), (70, 36), (81, 39), (14, 86), (85, 0), (68, 87),
                         (9, 20), (48, 100), (41, 67), (94, 79), (72, 84), (44, 41), (83, 80), (58, 11), (48, 27),
                         (88, 27), (87, 67), (83, 95), (50, 49), (81, 8), (34, 63), (1, 25), (55, 87), (97, 82),
                         (92, 52), (75, 53), (78, 72), (45, 94), (64, 98), (26, 17), (69, 73), (68, 2), (100, 54),
                         (99, 35), (36, 62), (72, 61), (41, 75), (53, 25), (36, 34), (60, 83), (43, 83), (4, 94),
                         (42, 71), (39, 98), (22, 92), (71, 98), (26, 1), (90, 36), (16, 26), (18, 29), (70, 61),
                         (68, 33), (31, 7), (67, 54), (86, 13), (28, 99), (16, 67), (85, 89), (19, 46), (33, 43),
                         (75, 44), (83, 90), (96, 10), (3, 28), (29, 95), (46, 57), (13, 88), (26, 76), (77, 19),
                         (17, 94), (9, 53), (62, 85), (24, 0), (43, 69), (10, 63), (78, 0), (38, 83), (53, 92),
                         (70, 90), (87, 8), (98, 75), (30, 80), (100, 69), (11, 72), (1, 75), (22, 54), (50, 38),
                         (13, 96), (34, 20), (73, 80), (93, 48), (47, 33), (27, 8), (7, 39), (74, 26), (79, 15),
                         (93, 56), (62, 83), (78, 23), (8, 30), (18, 53), (84, 94), (29, 11), (93, 26), (6, 9),
                         (78, 96), (53, 0), (100, 82), (30, 94), (6, 89), (16, 79), (26, 27), (36, 35), (24, 42),
                         (9, 98), (70, 23), (99, 21), (35, 41), (5, 29), (63, 45), (3, 88), (8, 37), (13, 63), (84, 88),
                         (92, 50), (91, 50), (61, 23), (12, 70), (54, 39), (40, 78), (99, 45), (83, 59), (71, 55),
                         (8, 85), (70, 89), (29, 56), (89, 80), (44, 40), (36, 50), (80, 34), (50, 18), (13, 66),
                         (29, 45), (34, 13), (61, 74), (95, 19), (24, 84), (12, 62), (69, 47), (84, 82), (44, 59),
                         (90, 22), (25, 43), (33, 35), (78, 82), (87, 5), (16, 60), (80, 27), (71, 34), (92, 37),
                         (63, 13), (26, 22), (29, 8), (54, 94), (5, 62), (65, 49), (99, 51), (72, 85), (38, 45),
                         (44, 83), (0, 69), (85, 86), (45, 89)]
x_y = [(38, 16), (274, 804), (292, 860), (889, 703), (674, 597), (517, 535), (305, 134), (114, 315), (649, 638),
       (515, 700), (732, 124), (87, 318), (298, 25), (327, 588), (365, 609), (267, 140), (281, 276), (38, 22),
       (298, 199), (268, 218), (943, 677), (608, 989), (432, 850), (429, 152), (222, 688), (321, 256), (27, 262),
       (44, 51), (892, 167), (874, 121), (305, 748), (120, 790), (902, 984), (893, 891), (396, 667), (476, 294),
       (379, 441), (195, 466), (44, 671), (767, 455), (516, 367), (177, 652), (643, 392), (534, 556), (503, 680),
       (367, 556), (881, 861), (437, 100), (65, 712), (433, 685), (140, 223), (874, 33), (110, 833), (702, 58),
       (491, 987), (13, 970), (608, 201), (729, 290), (94, 994), (682, 519), (913, 207), (257, 562), (582, 503),
       (990, 759), (614, 716), (518, 13), (516, 598), (532, 573), (503, 56), (177, 725), (443, 732), (59, 685),
       (977, 188), (453, 276), (369, 385), (849, 270), (611, 645), (814, 991), (415, 58), (852, 289), (398, 308),
       (220, 558), (754, 186), (883, 71), (688, 978), (3, 707), (874, 368), (27, 676), (71, 838), (371, 11), (860, 121),
       (208, 651), (502, 631), (972, 412), (760, 454), (364, 930), (561, 159), (67, 380), (706, 373), (380, 26),
       (500, 500)]

# list_unweighted_edges = [(67, 11), (65, 28), (19, 81), (75, 96), (78, 15), (69, 29), (59, 80), (24, 77), (25, 50), (55, 24), (89, 72), (84, 34), (42, 89), (59, 76), (67, 69), (10, 55), (81, 76), (27, 14), (55, 86), (46, 19), (60, 66), (34, 14), (47, 4), (41, 98), (32, 42), (14, 66), (62, 35), (60, 27), (95, 65), (86, 13), (29, 97), (66, 49), (26, 76), (37, 39), (64, 9), (50, 42), (23, 54), (57, 92), (97, 85), (25, 2), (83, 97), (23, 1), (72, 37), (21, 39), (33, 74), (57, 35), (48, 38), (10, 1), (68, 12), (53, 32), (34, 76), (84, 7), (91, 45), (98, 35), (54, 50), (54, 31), (35, 46), (60, 21), (11, 70), (5, 4), (52, 62), (64, 78), (79, 61), (28, 86), (6, 14), (43, 90), (7, 78), (98, 56), (75, 66), (21, 91), (34, 65), (10, 70), (89, 92), (24, 84), (15, 55), (9, 38), (67, 7), (90, 24), (20, 25), (91, 31), (11, 91), (65, 53), (44, 81), (51, 99), (93, 21), (8, 99), (32, 70), (70, 92), (86, 19), (40, 61), (15, 100), (72, 67), (9, 20), (41, 0), (15, 46), (77, 12), (59, 84), (0, 65), (84, 100), (38, 80), (100, 63), (89, 49), (13, 37), (78, 19), (99, 49), (67, 45), (95, 39), (49, 25), (92, 82), (71, 11), (63, 39), (22, 95), (90, 70), (12, 47), (48, 5), (39, 34), (94, 12), (6, 33), (46, 89), (84, 52), (7, 55), (67, 31), (89, 98), (56, 73), (37, 91), (73, 28), (50, 61), (39, 56), (90, 50), (52, 23), (4, 32), (35, 73), (18, 80), (83, 48), (18, 80), (91, 47), (87, 97), (55, 53), (9, 41), (68, 50), (22, 57), (92, 50), (66, 85), (55, 29), (45, 38), (71, 76), (71, 49), (12, 66), (39, 32), (16, 23), (38, 72), (38, 41), (17, 98), (86, 8), (90, 64), (89, 31), (14, 30), (33, 29), (12, 41), (29, 25), (40, 75), (18, 79), (24, 52), (98, 69), (38, 92), (95, 43), (48, 12), (93, 91), (50, 88), (29, 45), (68, 14), (78, 99), (22, 35), (5, 45), (23, 63), (72, 15), (47, 16), (47, 61), (30, 63), (67, 76), (39, 0), (93, 9), (11, 4), (78, 5), (58, 39), (48, 5), (28, 61), (89, 39), (66, 40), (76, 5), (16, 7), (99, 64), (55, 61), (6, 18), (43, 59), (16, 92), (61, 59), (95, 25), (88, 4), (12, 57), (28, 90), (64, 65), (22, 20), (67, 100), (72, 17), (42, 71), (95, 35), (36, 69), (27, 19), (3, 32), (75, 36), (47, 81), (78, 66), (16, 76), (5, 36), (0, 41), (95, 4), (19, 43), (45, 31), (31, 66), (36, 18), (41, 38), (64, 48), (74, 72), (11, 85), (59, 78), (56, 90), (15, 4), (90, 27), (97, 80), (90, 45), (60, 36), (2, 84), (10, 14), (60, 39), (51, 49), (64, 99), (13, 71), (7, 62), (58, 39), (70, 54), (11, 96), (61, 98), (63, 74), (35, 23), (13, 65), (8, 59), (65, 95), (71, 61), (45, 70), (0, 1), (71, 32), (81, 5), (23, 51), (99, 18), (28, 47), (81, 60), (55, 62), (93, 15), (86, 99), (13, 61), (28, 14), (5, 33), (16, 0), (14, 97), (41, 76), (61, 59), (32, 30), (66, 50), (53, 61), (22, 40), (88, 73), (100, 27), (70, 59), (94, 13), (55, 30), (44, 42), (70, 99), (18, 79), (54, 89), (13, 18), (45, 64), (40, 44), (89, 69), (44, 100), (19, 48), (19, 8), (22, 71), (42, 65), (72, 26), (82, 31), (50, 94), (11, 59), (86, 18), (60, 42), (73, 26), (52, 55), (82, 16), (63, 87), (83, 73), (5, 54), (69, 70), (78, 2), (67, 36), (54, 80), (40, 53), (71, 41), (74, 40), (10, 48), (47, 45), (66, 33), (49, 8), (16, 75), (17, 93), (87, 37), (97, 39), (65, 45), (26, 65), (24, 54), (68, 73), (75, 57), (87, 50), (7, 69), (29, 8), (70, 9), (69, 43), (54, 73), (0, 96), (90, 37), (21, 19), (63, 44), (39, 92), (34, 88), (1, 54), (80, 1), (71, 80), (14, 47), (85, 86), (9, 72), (31, 19), (23, 67), (44, 94), (28, 24), (72, 95), (58, 38), (31, 24), (55, 66), (45, 34), (69, 85), (89, 79), (70, 92), (88, 62), (67, 58), (9, 84), (33, 44), (93, 32), (30, 64), (80, 65), (63, 99), (51, 87), (77, 55), (11, 20), (13, 41), (100, 24), (33, 14), (24, 54), (93, 42), (45, 50), (19, 59), (22, 54), (22, 8), (78, 73), (20, 38), (11, 59), (3, 11), (52, 35), (26, 4), (76, 10), (44, 84), (86, 85), (87, 26), (23, 1), (46, 62), (25, 88), (55, 17), (20, 66), (54, 95), (90, 24), (77, 20), (86, 23), (56, 70), (32, 77), (95, 79), (19, 5), (11, 52), (12, 28), (55, 19), (7, 71), (55, 67), (6, 29), (82, 2), (92, 13), (6, 80), (4, 55), (61, 20), (23, 31), (95, 29), (96, 38), (98, 52), (27, 51), (99, 87), (64, 25), (78, 66), (88, 70), (37, 69), (5, 81), (88, 39), (62, 98), (63, 94), (85, 0), (52, 25), (26, 32), (63, 13), (48, 31), (47, 15), (74, 69), (100, 60), (66, 39), (79, 72), (14, 32), (28, 80), (4, 87), (0, 52), (28, 41), (99, 71), (72, 22), (43, 58), (6, 66), (24, 34), (87, 30), (94, 98), (87, 50), (15, 29), (14, 18), (16, 13), (48, 60), (6, 2), (47, 17), (76, 39), (90, 25), (15, 66), (16, 33), (58, 80), (11, 89), (13, 10), (35, 24), (19, 67), (52, 38), (7, 71), (73, 49), (31, 29), (61, 42), (55, 84), (87, 45), (90, 94), (37, 72), (16, 43), (49, 50), (81, 13), (49, 75), (26, 71), (50, 65), (41, 93), (98, 35), (8, 28), (49, 62), (86, 37), (91, 20), (91, 37), (50, 28), (36, 33), (53, 58), (92, 94), (22, 34), (84, 58), (50, 41), (95, 69), (28, 98), (72, 20), (29, 47), (49, 69), (67, 46), (40, 82), (86, 5), (96, 6), (78, 63), (14, 3)]
# x_y = [(738, 683), (40, 219), (464, 370), (654, 941), (642, 969), (377, 809), (803, 316), (462, 847), (65, 790), (669, 33), (577, 721), (637, 611), (571, 16), (804, 747), (797, 382), (576, 6), (661, 902), (24, 404), (728, 527), (695, 473), (0, 913), (303, 361), (736, 940), (774, 239), (607, 176), (955, 562), (783, 219), (858, 67), (211, 342), (963, 736), (665, 186), (66, 884), (384, 43), (194, 654), (62, 522), (515, 811), (715, 944), (972, 309), (760, 308), (774, 297), (192, 905), (181, 23), (674, 749), (180, 997), (272, 930), (609, 688), (699, 96), (218, 319), (384, 39), (658, 19), (926, 98), (770, 43), (166, 556), (499, 776), (755, 919), (490, 584), (123, 397), (265, 180), (815, 822), (850, 77), (681, 721), (162, 865), (945, 745), (243, 263), (195, 286), (339, 912), (57, 576), (976, 668), (104, 572), (730, 669), (685, 724), (127, 967), (599, 927), (98, 948), (499, 516), (686, 519), (721, 616), (334, 666), (720, 368), (429, 865), (674, 96), (475, 816), (686, 302), (55, 208), (924, 585), (887, 398), (340, 421), (851, 480), (102, 175), (861, 949), (302, 964), (632, 842), (654, 277), (637, 457), (31, 537), (893, 684), (890, 624), (415, 357), (656, 750), (236, 852), (780, 348)]


xy = {}
for index in range(len(x_y)):
    xy[index] = x_y[index]

# initialization of network parameters
discount_factor = 0
learning_rate = 0.7
initial_energy = 20  # Joules
data_packet_size = 512  # bits
electronic_energy = 50e-9  # Joules/bit 5
transmission_range = 50
e_fs = 10e-12  # Joules/bit/(meter)**2
e_mp = 0.0013e-12  # Joules/bit/(meter)**4
node_energy_limit = 10
epsilon = 0.1
episodes = 5000000
sink_energy = 5000000

d_o = math.sqrt(e_fs / e_mp) / transmission_range

Cum_reward = []
Q_value = []
Min_value = []
Episode = []
E_consumed = []
EE_consumed = []
No_Alive_Node = []

graph, rts, rtp, initial_E_vals, ref_E_vals, traffic, q_matrix = build_graph(xy, list_unweighted_edges)

start_time = time.time()

for rdn in range(episodes):

    initial_state = random.choice(range(0, len(rts), 1))
    tx_energy = 0
    rx_energy = 0
    Episode.append(rdn)
    available_actions = [*range(0, len(rts), 1)]

    current_state = initial_state

    if np.random.random() > epsilon:
        # Get random action
        action = np.argmin(q_matrix[current_state, :])

    else:
        # Get action from Q table
        action = random.choice(available_actions)

    initial_state = action

    chosen_MST = rtp[action]
    # print('chosen MST:', chosen_MST)

    # Data transmission
    for node in chosen_MST:
        counter = 0
        while counter < len(chosen_MST[node]) - 1:
            init_node = chosen_MST[node][counter]
            next_node = chosen_MST[node][counter + 1]
            dis = math.sqrt(
                math.pow((xy[init_node][0] - xy[next_node][0]), 2) + math.pow((xy[init_node][1] - xy[next_node][1]),
                                                                              2)) / transmission_range
            if dis <= d_o:
                etx = electronic_energy * data_packet_size + e_fs * data_packet_size * math.pow(dis, 2)
            else:
                etx = electronic_energy * data_packet_size + e_mp * data_packet_size * math.pow(dis, 4)
            erx = electronic_energy * data_packet_size

            initial_E_vals[init_node] = initial_E_vals[init_node] - traffic[node] * etx  # update the start node energy
            initial_E_vals[next_node] = initial_E_vals[next_node] - traffic[node] * erx  # update the next hop energy
            tx_energy += traffic[node] * etx
            rx_energy += traffic[node] * erx
            counter += 1

    # reward = initial_E_vals[max(initial_E_vals.keys(), key=(lambda k: initial_E_vals[k]))]

    # reward = tx_energy + rx_energy

    Energy_Consumption = [ref_E_vals[i] - initial_E_vals[i] for i in graph.nodes if i != sink_node]
    reward = max(Energy_Consumption)

    Min_value.append(reward)
    Cum_reward.append(sum(Min_value))

    # Maximum possible Q value in next step (for new state)
    max_future_q = np.max(q_matrix[action, :])

    # Current Q value (for current state and performed action)
    current_q = q_matrix[current_state, action]
    # And here's our equation for a new Q value for current state and action
    new_q = (1 - learning_rate) * current_q + learning_rate * (reward + discount_factor * max_future_q)
    # new_q = (1 - learning_rate) * current_q + learning_rate * discount_factor *reward
    Q_value.append(new_q)

    # Update Q table with new Q value
    q_matrix[current_state, action] = new_q

    E_consumed.append(tx_energy + rx_energy)
    EE_consumed.append(sum(E_consumed))
    No_Alive_Node.append(len(xy) - 1)
    cost = 0

    dead_node = []

    for index, item in initial_E_vals.items():

        if item <= node_energy_limit:

            dead_node.append(index)

            if index in xy.keys():
                xy.pop(index)

    test = [(item1, item2) for item1, item2 in list_unweighted_edges if
            item1 not in dead_node and item2 not in dead_node]

    list_unweighted_edges = test

    update_evals = {index: item for index, item in initial_E_vals.items() if item > node_energy_limit}

    if len(dead_node) >= 1:
        # print('Round:', rdn)
        # print('Dead node:', dead_node)

        try:
            graph, rts, rtp, initial_E_vals, ref_E_vals, traffic, q_matrix = build_graph(xy, list_unweighted_edges)

            initial_E_vals = update_evals
            ref_E_vals = initial_E_vals
            update_qmatrix = np.ones((len(rts), len(rts)))
            q_matrix = update_qmatrix * new_q



        #except ValueError:
        except Exception:
            # Error = messagebox.showinfo("Enter proper values")
            print('Optimal lifetime:', rdn)
            break

    dead_node = []

print("--- %s seconds ---" % (time.time() - start_time))

with open('test.txt', 'w') as f:
    f.write(json.dumps(No_Alive_Node))

# Now read the file back into a Python list object
with open('test.txt', 'r') as f:
    No_Alive_Node = json.loads(f.read())


'''
print('Round:', Episode)
print('Life_node:', No_Alive_Node)
print('Cummulative reward:', Cum_reward)
print('Q_value:', Q_value)


plt.plot(Episode, No_Alive_Node)
plt.xlabel('Round')
plt.ylabel('NAN')
plt.title('Number of Alive Nodes in each Round')
plt.show()

plt.plot(Episode, Cum_reward, label="Cum_Reward")
plt.xlabel('Round')
plt.ylabel('Reward (Joules)')
plt.title('Q-Value Convergence')
plt.legend()
plt.show()

plt.plot(Episode, Q_value, label="Q-Value")
plt.plot(Episode, Min_value, label="Reward")
plt.xlabel('Round')
plt.ylabel('Reward (Joules)')
plt.title('Q-Value Convergence')
plt.legend()
plt.show()


plt.plot(Episode, E_consumed)
plt.xlabel('Round')
plt.ylabel('Energy Consumption (Joules)')
# plt.title('Energy Consumption for each round')
plt.show()

plt.plot(Episode, EE_consumed)
plt.xlabel('Round')
plt.ylabel('Total Energy Consumption (Joules)')
# plt.title('Total Energy Consumption for each round')
plt.show()
'''

